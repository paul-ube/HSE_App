/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hse_application;

import emiratesid.ae.exceptions.ErrorCodes;
import emiratesid.ae.exceptions.MiddlewareException;
import emiratesid.ae.publicdata.CardHolderPublicData;
import emiratesid.ae.publicdata.PublicDataFacade;
import emiratesid.ae.readersmgt.CardTypeEnum;
import emiratesid.ae.readersmgt.PCSCReader;
import emiratesid.ae.readersmgt.ReaderManagement;
import emiratesid.ae.utils.Utils;
import hse_application.functions.DBConnect;
import hse_application.functions.siteOpener;

import java.awt.CardLayout;
import java.awt.Component;

import java.awt.Cursor;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

import java.nio.charset.StandardCharsets;
import java.security.MessageDigest; 
import java.security.NoSuchAlgorithmException; 
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Base64;
import java.util.Date;
import java.util.Properties;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;

import javax.swing.JPasswordField;
import javax.swing.JProgressBar;
import javax.swing.JTextField;
import javax.swing.Timer;

import org.apache.commons.validator.EmailValidator;
import org.openide.util.Exceptions;


/**
 *
 * @author OPTIPLEX
 */
public class SignUp_Frame extends javax.swing.JFrame{
    int xMouse;
    int yMouse;
    
    Connection con = null;
    PreparedStatement pstmt = null;
    ResultSet rs = null;
    String email;
    String name;
    String branch; //selected branch
    String contact;
    Date myDate;
    int percent = 0;
    private static final int PROGRESS_MAX = 100; 
    private Timer timer = null;
    Thread th = null;
    String branchid;
    String branchEmail;
    
    
    private PCSCReader reader = null;
    public ReaderManagement readerMgr;
    byte[] photo;
    
    char x;


    
//    public SignUp_Frame(Frame owner, ReaderManagement readerMgr, String userID) {
    public SignUp_Frame(ReaderManagement readerMgr, String userID) {
//        super(owner);
        this.readerMgr = readerMgr;
        

        
        initComponents();  
        
//        this.setIconImage(new ImageIcon(getClass().getResource("/hse_application/Icons/hsepro.png")).getImage());
        
        x = txt_pass.getEchoChar();
        
        CardLayout c1 = (CardLayout) Layout.getLayout();
//        c1.show(Layout, "card1");
        c1.show(Layout, "card4");
        initialize();
        
        con = DBConnect.ConnDB();
        
        cmb_branch.setModel(new DefaultComboBoxModel());
        
        // Get the branches from the database
        try{
//            cmb_branch.removeAllItems();
 
            String query = "SELECT a.branch_name branchName, a.branch_id,"
                    + " a.branch_email email FROM tbl_branch a"
                    + " INNER JOIN tbl_user b ON a.branch_id = b.fk_branch_id"
                    + " WHERE b.user_id = '"+userID+"'";
            pstmt = con.prepareStatement(query);
            rs = pstmt.executeQuery();
            
            while(rs.next()){
                String brrrranch = rs.getString("branchName");
                branchid = rs.getString("a.branch_id");
                branchEmail = rs.getString("email");
                cmb_branch.addItem(brrrranch);
            }
         
            con.close();
            
        }catch (SQLException e){
            e.printStackTrace();
        }

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_of_inputs = new javax.swing.JPanel();
        header = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        Layout = new javax.swing.JPanel();
        EmiratesID = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        btn_next = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        btn_capture = new javax.swing.JButton();
        txt_eid = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_bday = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        photo_bomb = new javax.swing.JLabel();
        txt_nationality = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        Credentials = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        back = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        eyecon = new javax.swing.JButton();
        eyecon1 = new javax.swing.JButton();
        txt_mobile = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_confirmpass = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        txt_confirmname = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_pass = new javax.swing.JPasswordField();
        cmb_branch = new javax.swing.JComboBox<String>();
        txt_email = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        LandingPage = new javax.swing.JPanel();
        txt_text = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        panel_of_inputs.setBackground(new java.awt.Color(234, 238, 243));
        panel_of_inputs.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(11, 68, 124)));

        header.setBackground(new java.awt.Color(11, 68, 124));
        header.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(11, 68, 124)));
        header.setPreferredSize(new java.awt.Dimension(524, 39));
        header.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/hse_images/Backgrounds/signup.png"))); // NOI18N
        jLabel18.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jLabel18.text")); // NOI18N
        jLabel18.setPreferredSize(new java.awt.Dimension(770, 39));
        jLabel18.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel18MouseDragged(evt);
            }
        });
        jLabel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel18MousePressed(evt);
            }
        });
        header.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 39));

        Layout.setLayout(new java.awt.CardLayout());

        EmiratesID.setBackground(new java.awt.Color(234, 238, 243));
        EmiratesID.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                EmiratesIDComponentShown(evt);
            }
        });

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/hse_images/hsepro.png"))); // NOI18N
        jLabel16.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jLabel16.text")); // NOI18N

        jPanel2.setBackground(new java.awt.Color(234, 238, 243));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/DefaultButtons/cancel default_1.png"))); // NOI18N
        jButton2.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jButton2.text")); // NOI18N
        jButton2.setBorder(null);
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setFocusPainted(false);
        jButton2.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/ClickedButtons/cancel clicked .png"))); // NOI18N
        jButton2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/HoverButtons/cancel hover.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btn_next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/DefaultButtons/nextdefault.png"))); // NOI18N
        btn_next.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.btn_next.text")); // NOI18N
        btn_next.setBorder(null);
        btn_next.setBorderPainted(false);
        btn_next.setContentAreaFilled(false);
        btn_next.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_next.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/DefaultButtons/nextdisabled.png"))); // NOI18N
        btn_next.setEnabled(false);
        btn_next.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/ClickedButtons/nextclicked.png"))); // NOI18N
        btn_next.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/HoverButtons/nexthover.png"))); // NOI18N
        btn_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(227, 227, 227)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_next)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(234, 238, 243));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(47, 47, 47));
        jLabel7.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jLabel7.text")); // NOI18N

        txt_name.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txt_name.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.txt_name.text")); // NOI18N
        txt_name.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_name.setMargin(new java.awt.Insets(2, 7, 2, 2));
        txt_name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_nameFocusGained(evt);
            }
        });

        btn_capture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/DefaultButtons/captureiddefault.png"))); // NOI18N
        btn_capture.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.btn_capture.text")); // NOI18N
        btn_capture.setBorder(null);
        btn_capture.setBorderPainted(false);
        btn_capture.setContentAreaFilled(false);
        btn_capture.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_capture.setPreferredSize(new java.awt.Dimension(130, 77));
        btn_capture.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/ClickedButtons/captureidclicked.png"))); // NOI18N
        btn_capture.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/HoverButtons/captureidhover.png"))); // NOI18N
        btn_capture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_captureActionPerformed(evt);
            }
        });

        txt_eid.setEditable(false);
        txt_eid.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txt_eid.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.txt_eid.text")); // NOI18N
        txt_eid.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_eid.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_eid.setMargin(new java.awt.Insets(2, 7, 2, 2));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(47, 47, 47));
        jLabel9.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jLabel9.text")); // NOI18N

        txt_bday.setEditable(false);
        txt_bday.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txt_bday.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.txt_bday.text")); // NOI18N
        txt_bday.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_bday.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_bday.setMargin(new java.awt.Insets(2, 7, 2, 2));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(47, 47, 47));
        jLabel5.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jLabel5.text")); // NOI18N

        photo_bomb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        photo_bomb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/question.png"))); // NOI18N
        photo_bomb.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.photo_bomb.text")); // NOI18N
        photo_bomb.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(11, 68, 124)));
        photo_bomb.setPreferredSize(new java.awt.Dimension(130, 154));

        txt_nationality.setEditable(false);
        txt_nationality.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txt_nationality.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.txt_nationality.text")); // NOI18N
        txt_nationality.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_nationality.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_nationality.setMargin(new java.awt.Insets(2, 7, 2, 2));

        jLabel15.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel15.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jLabel15.text")); // NOI18N

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(47, 47, 47));
        jLabel8.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jLabel8.text")); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_capture, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(photo_bomb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(txt_name)
                            .addComponent(txt_nationality)
                            .addComponent(txt_bday)
                            .addComponent(txt_eid, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_nationality, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_bday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addGap(7, 7, 7)
                        .addComponent(txt_eid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(photo_bomb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_capture, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout EmiratesIDLayout = new javax.swing.GroupLayout(EmiratesID);
        EmiratesID.setLayout(EmiratesIDLayout);
        EmiratesIDLayout.setHorizontalGroup(
            EmiratesIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmiratesIDLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel16)
                .addGap(30, 30, 30))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        EmiratesIDLayout.setVerticalGroup(
            EmiratesIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmiratesIDLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(EmiratesIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Layout.add(EmiratesID, "card4");

        Credentials.setBackground(new java.awt.Color(234, 238, 243));
        Credentials.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(234, 238, 243));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/hse_images/hsepro.png"))); // NOI18N
        jLabel1.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jLabel1.text")); // NOI18N
        Credentials.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(539, 11, -1, 307));

        jPanel1.setBackground(new java.awt.Color(234, 238, 243));

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/DefaultButtons/cancel default_1.png"))); // NOI18N
        back.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.back.text")); // NOI18N
        back.setBorder(null);
        back.setBorderPainted(false);
        back.setContentAreaFilled(false);
        back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back.setFocusPainted(false);
        back.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/ClickedButtons/cancel clicked .png"))); // NOI18N
        back.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/HoverButtons/cancel hover.png"))); // NOI18N
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/DefaultButtons/Sign Up Default.png"))); // NOI18N
        jButton3.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jButton3.text")); // NOI18N
        jButton3.setBorder(null);
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/ClickedButtons/Sign Up clicked.png"))); // NOI18N
        jButton3.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/HoverButtons/Sign Up Hover.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(227, 227, 227)
                .addComponent(back)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addContainerGap(280, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(back, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        Credentials.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 336, 776, -1));

        jPanel3.setBackground(new java.awt.Color(234, 238, 243));
        jPanel3.setPreferredSize(new java.awt.Dimension(459, 307));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        eyecon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/visibilityoff_1.png"))); // NOI18N
        eyecon.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.eyecon.text")); // NOI18N
        eyecon.setBorder(null);
        eyecon.setBorderPainted(false);
        eyecon.setContentAreaFilled(false);
        eyecon.setFocusPainted(false);
        eyecon.setFocusable(false);
        eyecon.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/baseline_remove_red_eye_black_18dp.png"))); // NOI18N
        eyecon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                eyeconMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                eyeconMouseReleased(evt);
            }
        });
        jPanel3.add(eyecon, new org.netbeans.lib.awtextra.AbsoluteConstraints(398, 268, 20, 20));

        eyecon1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/visibilityoff_1.png"))); // NOI18N
        eyecon1.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.eyecon1.text")); // NOI18N
        eyecon1.setBorder(null);
        eyecon1.setBorderPainted(false);
        eyecon1.setContentAreaFilled(false);
        eyecon1.setFocusPainted(false);
        eyecon1.setFocusable(false);
        eyecon1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/baseline_remove_red_eye_black_18dp.png"))); // NOI18N
        eyecon1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                eyecon1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                eyecon1MouseReleased(evt);
            }
        });
        jPanel3.add(eyecon1, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 268, 20, 20));

        txt_mobile.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txt_mobile.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.txt_mobile.text")); // NOI18N
        txt_mobile.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_mobile.setMargin(new java.awt.Insets(2, 7, 2, 2));
        txt_mobile.setNextFocusableComponent(cmb_branch);
        txt_mobile.setPreferredSize(new java.awt.Dimension(195, 24));
        txt_mobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_mobileActionPerformed(evt);
            }
        });
        txt_mobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_mobileKeyTyped(evt);
            }
        });
        jPanel3.add(txt_mobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 205, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel2.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jLabel2.text")); // NOI18N
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 9, 249, -1));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(47, 47, 47));
        jLabel14.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jLabel14.text")); // NOI18N
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 52, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(47, 47, 47));
        jLabel6.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jLabel6.text")); // NOI18N
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(221, 179, 56, -1));

        txt_confirmpass.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txt_confirmpass.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.txt_confirmpass.text")); // NOI18N
        txt_confirmpass.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_confirmpass.setMargin(new java.awt.Insets(2, 7, 2, 2));
        txt_confirmpass.setPreferredSize(new java.awt.Dimension(195, 24));
        jPanel3.add(txt_confirmpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(223, 266, 173, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(47, 47, 47));
        jLabel3.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jLabel3.text")); // NOI18N
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 113, 138, -1));

        txt_confirmname.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txt_confirmname.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.txt_confirmname.text")); // NOI18N
        txt_confirmname.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_confirmname.setMargin(new java.awt.Insets(2, 7, 2, 2));
        jPanel3.add(txt_confirmname, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 78, 408, -1));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(47, 47, 47));
        jLabel13.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jLabel13.text")); // NOI18N
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(223, 240, 145, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(47, 47, 47));
        jLabel4.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jLabel4.text")); // NOI18N
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 179, -1, -1));

        txt_pass.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txt_pass.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.txt_pass.text")); // NOI18N
        txt_pass.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_pass.setMargin(new java.awt.Insets(2, 7, 2, 2));
        txt_pass.setNextFocusableComponent(txt_confirmpass);
        txt_pass.setPreferredSize(new java.awt.Dimension(173, 24));
        jPanel3.add(txt_pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 266, 173, -1));

        cmb_branch.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        cmb_branch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "HSEPro FZE try", "HSEPro Fujairah", "HSEPro Dubai", "HSEPro Abu Dhabi" }));
        cmb_branch.setSelectedIndex(1);
        cmb_branch.setNextFocusableComponent(txt_pass);
        cmb_branch.setPreferredSize(new java.awt.Dimension(195, 24));
        jPanel3.add(cmb_branch, new org.netbeans.lib.awtextra.AbsoluteConstraints(223, 205, -1, -1));

        txt_email.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txt_email.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.txt_email.text")); // NOI18N
        txt_email.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_email.setMargin(new java.awt.Insets(2, 7, 2, 2));
        txt_email.setNextFocusableComponent(txt_mobile);
        txt_email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_emailKeyTyped(evt);
            }
        });
        jPanel3.add(txt_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 144, 408, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(47, 47, 47));
        jLabel12.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jLabel12.text")); // NOI18N
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, -1));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 2, 11)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(30, 30, 30));
        jLabel17.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jLabel17.text")); // NOI18N
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 56, -1, -1));

        Credentials.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 11, 449, -1));

        Layout.add(Credentials, "card3");

        LandingPage.setBackground(new java.awt.Color(234, 238, 243));

        txt_text.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/Thank you for registering at HSEPro. You are on your way on becoming a certified professional. P.png"))); // NOI18N
        txt_text.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.txt_text.text")); // NOI18N

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/DefaultButtons/goto_default.png"))); // NOI18N
        jButton1.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jButton1.text")); // NOI18N
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setFocusPainted(false);
        jButton1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/ClickedButtons/goto_click.png"))); // NOI18N
        jButton1.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/HoverButtons/goto_hover.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(234, 238, 243));
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/hse_images/hsepro.png"))); // NOI18N
        jLabel10.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jLabel10.text")); // NOI18N

        jLabel11.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(70, 70, 70));
        jLabel11.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jLabel11.text")); // NOI18N

        jButton4.setText(org.openide.util.NbBundle.getMessage(SignUp_Frame.class, "SignUp_Frame.jButton4.text")); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LandingPageLayout = new javax.swing.GroupLayout(LandingPage);
        LandingPage.setLayout(LandingPageLayout);
        LandingPageLayout.setHorizontalGroup(
            LandingPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LandingPageLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(LandingPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_text)
                    .addComponent(jLabel11)
                    .addComponent(jButton1)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81)
                .addComponent(jLabel10))
        );
        LandingPageLayout.setVerticalGroup(
            LandingPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LandingPageLayout.createSequentialGroup()
                .addGroup(LandingPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LandingPageLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(LandingPageLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(txt_text)
                        .addGap(26, 26, 26)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(77, Short.MAX_VALUE))
        );

        Layout.add(LandingPage, "card1");

        javax.swing.GroupLayout panel_of_inputsLayout = new javax.swing.GroupLayout(panel_of_inputs);
        panel_of_inputs.setLayout(panel_of_inputsLayout);
        panel_of_inputsLayout.setHorizontalGroup(
            panel_of_inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Layout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panel_of_inputsLayout.setVerticalGroup(
            panel_of_inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_of_inputsLayout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Layout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_of_inputs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_of_inputs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_emailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_emailKeyTyped
        
    }//GEN-LAST:event_txt_emailKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.out.println("DB Connection Closed");
        this.dispose();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void btn_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nextActionPerformed
//        //get all the information first

        CardLayout c1 = (CardLayout) Layout.getLayout();
        c1.show(Layout, "card3");
//        email = txt_email.getText();
//        branch = cmb_branch.getSelectedItem().toString();
//        contact = txt_mobile.getText();
//        
//        
//        name = txt_name.getText();
//        
//        
//        String salt = ("--HSEPro--");
//        String password = txt_pass.getText();
//        String password2 = txt_confirmpass.getText();
//        
//        // this is the crypted password after a long hash sheets
//        String crypted_pass1 = cryptedPassword(password, salt);
//        String crypted_pass2 = cryptedPassword(password2, salt);
//        
//        
//      
//        // check if all fields are filled up
//        if (verifyTextfields(panel_of_inputs) == true){
//            
//            //check if the email address is valid
//            if (validemail(email)==true){
//                
//                //check if password fields are the same
//                if (crypted_pass1.equals(crypted_pass2)){
//                    
//                    // verify duplicate name
//                    if (email_verify_duplicate(email, branch)==true){
//                        System.out.println("hello");
//                    }else{
//                        JOptionPane.showMessageDialog(this, "Email Already Exists", "Error", JOptionPane.ERROR_MESSAGE);
//                    }
//                }else{
//                    JOptionPane.showMessageDialog(this, "Password fields are not the same", "Error", JOptionPane.ERROR_MESSAGE);
//                    txt_pass.setText("");
//                    txt_confirmpass.setText("");
//                }
//                
//            }else{
//                JOptionPane.showMessageDialog(this, "Invalid Email", "Error", JOptionPane.ERROR_MESSAGE);
//            }
//            
//            
//        }else{
//            JOptionPane.showMessageDialog(this, "Please complete all the details", "Error", JOptionPane.ERROR_MESSAGE);
//        }
        
        
        
//        String EncodedPass = hashPassword(base64_encode(str_rot13(hashPassword(hashPassword(str_rot13(password.concat(salt))))));
        
        
        
//        System.out.println(hashPassword(name));
        
        
//        String password = str_rot13();

//        try{
//            con = DBConnect.ConnDB();
//            
//        }catch (Exception e){
//            e.printStackTrace();
//            JOptionPane.showMessageDialog(this, e);
//        }
        
        
    }//GEN-LAST:event_btn_nextActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        
        
        Thread theThread = new Thread(new VerificationThread());
        theThread.start();
        
        
        
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void loadVerification(){
        //get all the information first
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        email = txt_email.getText();
        branch = cmb_branch.getSelectedItem().toString();
        contact = txt_mobile.getText();
        String nationality = txt_nationality.getText();
        String dob = txt_bday.getText();
        String eid = txt_eid.getText();
            
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        myDate = new Date();
        String currentDate = sdf.format(myDate);
        
        name = txt_confirmname.getText();
        
        
        String salt = ("--HSEPro--");
        String password = txt_pass.getText();
        String password2 = txt_confirmpass.getText();
        
        // this is the crypted password after a long hash sheets
        String crypted_pass1 = cryptedPassword(password, salt);
        String crypted_pass2 = cryptedPassword(password2, salt);
        
        // check if all fields are filled up
        if (verifyTextfields() == true){
            
            //check if the email address is valid
            if (validemail(email)==true){
                
                //check if password fields are the same
                if (crypted_pass1.equals(crypted_pass2)){
                    
                    
                    // check if there is already a student with the same emirates id
                    if (student_verify_duplicate(eid, branch)==true){
                        
                        // verify duplicate email
                        if (email_verify_duplicate(email, branch)==true){
                            System.out.println("addSignUp");
                            
                            if (addSignUp(name, email, contact, crypted_pass1, branch, nationality, dob, eid, photo, currentDate)==true){
                                
//                                JOptionPane.showMessageDialog(this, "You have successfully registered", "Information", JOptionPane.INFORMATION_MESSAGE);
                                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));

                                CardLayout c1 = (CardLayout)Layout.getLayout();
                                c1.show(Layout, "card1");
                                
                                sendSignUp();


                            }else{
                                JOptionPane.showMessageDialog(this, "Not Registered");
                                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                            }


                        }else{
                            JOptionPane.showMessageDialog(this, "Email Already Exists", "Error", JOptionPane.ERROR_MESSAGE);
                            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                        }
                    
                    }else{
                        JOptionPane.showMessageDialog(this, "Emirates ID already registered", "Error", JOptionPane.ERROR_MESSAGE);
                        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "Password fields are not the same", "Error", JOptionPane.ERROR_MESSAGE);
                    txt_pass.setText("");
                    txt_confirmpass.setText("");
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
                
            }else{
                JOptionPane.showMessageDialog(this, "Invalid Email", "Error", JOptionPane.ERROR_MESSAGE);
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
            
            
        }else{
            JOptionPane.showMessageDialog(this, "Please complete all the details", "Error", JOptionPane.ERROR_MESSAGE);
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
        
        
        
    }
    
    
    
    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        CardLayout c1 = (CardLayout)Layout.getLayout();
        c1.show(Layout, "card4");
                
//        for (Component component : Credentials.getComponents()){
//            if (component instanceof JTextField){
//                ((JTextField)component).setText("");
//            }
//            if (component instanceof JPasswordField){
//                ((JPasswordField)component).setText("");
//            }
//        }    
        
        txt_email.setText("");
        txt_mobile.setText("");
        txt_pass.setText("");
        txt_confirmpass.setText("");
                
                
    }//GEN-LAST:event_backActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        
    }//GEN-LAST:event_formComponentShown

    private void EmiratesIDComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_EmiratesIDComponentShown
        
    }//GEN-LAST:event_EmiratesIDComponentShown

    private void txt_nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nameFocusGained
      
    }//GEN-LAST:event_txt_nameFocusGained

    private void btn_captureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_captureActionPerformed
        
        
        System.out.println("Reader connected?" + reader.isConnected());  //Return true if a card is connected
        System.out.println("Is it UAE Card?" + isUAECard(reader)); //return true if the card inserted is a UAE or UAE test Card
        
        try{
            reader.disconnect();  //changed last 3/10/2019 5PM
            reader.connect(readerMgr.getContext());
//            reader.extractATR();
            
            if(!reader.isConnected() || !isUAECard(reader)){

                while(JOptionPane.showConfirmDialog(this,
                    "Please insert UAE card\nChoose Yes to retry, No to go back",
                    "Card reader is empty, or not UAE card.", JOptionPane.YES_NO_OPTION) == 0) {

                    if(retryConnection(reader) && isUAECard(reader)) { //retry the connection
                        // thread to load the public data
                        
                        try{
                            th = new Thread(new PublicDataThread());
                            th.start();						
                        } catch(Exception iex){
                            JOptionPane.showMessageDialog(this, iex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                            iex.printStackTrace();
                        }
                        
                        
                        
                        break;
                    }
                }            
            }else{
                
                try{
                    th = new Thread(new PublicDataThread());
                    th.start();						
                } catch(Exception iex){
                    JOptionPane.showMessageDialog(this, iex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    iex.printStackTrace();
                }
                
                
                System.out.println("Card is Connected");
            }
            
            
        }catch (Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Card not found");
        }
    }//GEN-LAST:event_btn_captureActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        siteOpener open = new siteOpener();
        open.OpenWebsite("http://muzta.ph/system/student/index.php");
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_mobileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_mobileKeyTyped
        char c = evt.getKeyChar();
        
        if (!(Character.isDigit(c) ||
            (c==KeyEvent.VK_BACK_SPACE) ||
            (c==KeyEvent.VK_DELETE))){
        getToolkit().beep();
        evt.consume();
        JOptionPane.showMessageDialog(null, "Please Enter Digit Only", "WARNING!", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_txt_mobileKeyTyped

    private void txt_mobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_mobileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_mobileActionPerformed

    private void eyeconMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eyeconMousePressed
        txt_confirmpass.setEchoChar((char)0);
    }//GEN-LAST:event_eyeconMousePressed

    private void eyeconMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eyeconMouseReleased
        txt_confirmpass.setEchoChar(x);
    }//GEN-LAST:event_eyeconMouseReleased

    private void eyecon1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eyecon1MousePressed
        txt_pass.setEchoChar((char)0);
    }//GEN-LAST:event_eyecon1MousePressed

    private void eyecon1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eyecon1MouseReleased
        txt_pass.setEchoChar(x);
    }//GEN-LAST:event_eyecon1MouseReleased

    private void jLabel18MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jLabel18MousePressed

    private void jLabel18MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_jLabel18MouseDragged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed
    
 
    public boolean addSignUp(String name, String email, String contact, String crypted_pass1, String branch,
            String nationality, String dob, String eid, byte[]photo, String registeredDate){
        
        con = DBConnect.ConnDB();
        boolean xyz = true;
        try {
            
            con.setAutoCommit(false);
            
            String query = "INSERT INTO tbl_reg_student SET"
                    + " reg_student_name = '"+name+"',"
                    + " reg_student_mobile = '"+contact+"',"
                    + " reg_student_email = '"+email+"',"
                    + " reg_student_username = '"+email+"',"
                    + " reg_student_password = '"+crypted_pass1+"',"
                    + " reg_student_status = 'US',"
                    + " fk_branch_id = (SELECT branch_id FROM tbl_branch WHERE branch_name = '"+branch+"'),"
                    + " reg_student_nationality = '"+nationality+"',"
                    + " reg_student_birthday = '"+dob+"',"
                    + " reg_student_emirates_id = '"+eid+"',"
                    + " reg_student_photo = ?,"
                    + " registeredDate = '"+registeredDate+"'";
            pstmt = con.prepareStatement(query);
            pstmt.setBytes(1, photo);
            pstmt.executeUpdate();
            con.commit();
            
            pstmt.close();
            con.close();
            System.out.println("DB Connection Closed");
            
        } catch (SQLException ex) {
            Exceptions.printStackTrace(ex);
            JOptionPane.showMessageDialog(this, "Error: "+ex);
            xyz=false;
            try {
                con.rollback();
                
            } catch (SQLException ex1) {
                Exceptions.printStackTrace(ex1);
            }
        }
        return xyz;
    }
    
    
    private void sendSignUp(){
        
//        String branchEmail = getBranchEmail(branchid);
        
        
        String emailSubject = "Sign Up Request";
        String bodyMsg = "HSEPro Message Alert\n\n"
                + "<b>Sign Up Information</b>\n"
                + "Branch: <b>'"+branch+"'</b>\n"
                + "Name: <b>'"+name+"'</b>\n"
                + "Mobile <b>'"+contact+"'</b>\n"
                + "Email <b>'"+email+"'</b>\n"
                + "Sign in to the system for more information.\n"
                + "If you would like to sign in, "
                + "<a href='https://system.hsepro.org'>click here</a>";
//        
        final String username = "training@hsepro.org";
        final String password = "(TraininG)-23";
        
//        final String username = "clinic.stiglobal@gmail.com";
//        final String password = "Password1234@@";
                
//                (TraininG)-23
        
        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", "mail.hsepro.org");
//        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "465");
//        props.put("mail.smtp.socketFactory.port", "465");
//        props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
//        props.put("mail.smtp.socketFactory.fallback", "false");
//        props.put("mail.smtp.user", username);
        

        Session sesh = Session.getInstance(props, 
                new javax.mail.Authenticator(){
            
            @Override
            protected PasswordAuthentication getPasswordAuthentication(){
                return new PasswordAuthentication(username, password);
            }
        });
        try{
            Message msg = new MimeMessage(sesh);
            msg.setFrom(new InternetAddress(username));
            msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(email));
            msg.setRecipients(Message.RecipientType.CC, InternetAddress.parse(branchEmail));
            msg.setSubject(emailSubject);
            msg.setText(bodyMsg);
            
            Transport.send(msg);
            
        }catch(MessagingException e){
            e.printStackTrace();
        }
    }

    private String getBranchEmail(String branch_id){
        String branchemail = "";
        try {
            
            String query = "SELECT branch_email FROM tbl_branch WHERE branch_id = '"+branch_id+"'";
            pstmt = con.prepareStatement(query);
            rs = pstmt.executeQuery();
            if (rs.next()){
                branchemail = rs.getString("branch_email");
            }
        } catch (SQLException ex) {
            Exceptions.printStackTrace(ex);
        }
        return branchemail;
        
    }
    
    private boolean email_verify_duplicate(String email, String theBranch){
        boolean x = true;
        try {
            con = DBConnect.ConnDB();
            String query = "SELECT a.reg_student_email FROM tbl_reg_student a"
                    + " INNER JOIN tbl_branch b ON a.fk_branch_id = b.branch_id"
                    + " WHERE a.reg_student_email = ? AND b.branch_name = ?";
            pstmt = con.prepareStatement(query);
            pstmt.setString(1, email);
            pstmt.setString(2, theBranch);
            
            rs = pstmt.executeQuery();
            
            if(rs.next()){
                x = false; // if there is no duplicate name, return true;
            }
            pstmt.close();
            con.close();
            System.out.println("DB Connection Closed");
            
        } catch (SQLException ex) {
            Exceptions.printStackTrace(ex);

        }
        return x;
    }
    
    // will not yet be used
    private boolean student_verify_duplicate(String theEID, String theBranch){
        boolean x = false;
        try {
            con = DBConnect.ConnDB();
            String query = "SELECT a.reg_student_emirates_id FROM tbl_reg_student a"
                    + " INNER JOIN tbl_branch b ON a.fk_branch_id = b.branch_id"
                    + " WHERE a.reg_student_emirates_id = ? AND b.branch_name = ?";
            pstmt = con.prepareStatement(query);
            pstmt.setString(1, theEID);
            pstmt.setString(2, theBranch);
            
            rs = pstmt.executeQuery();
            
            if(!rs.next()){
                x = true; // if there is no duplicate name, return true;
            }
            pstmt.close();
            con.close();
            System.out.println("DB Connection Closed");
            
        } catch (SQLException ex) {
            Exceptions.printStackTrace(ex);

        }
        return x;
    }
    
    
    private boolean validemail(String email){
        boolean result = true;
        
            EmailValidator validator = EmailValidator.getInstance();
            if (!validator.isValid(email)){
                result = false;
            }       
        return result;
    }
      
    
    
    private boolean verifyTextfields(){
        if (txt_confirmname.getText().trim().isEmpty() ||
                txt_email.getText().trim().isEmpty() ||
                txt_mobile.getText().isEmpty() ||
                txt_pass.getText().isEmpty() ||
                txt_pass.getText().isEmpty()){
            return false;
        }else{
            return true;
        }
    }
        
        
        
    
    
    
    private String cryptedPassword(String pass, String salt){
        String cryptedPassword = "";
        //str_rot13 the password concatenated with the salt
        String a = str_rot13(pass.concat(salt));
        
        //hash the str_rot13'ed string
        String b = hashPassword(a);
        
        //rotate the hashed password again
        String c = str_rot13(b);
        
        //encode to base64
        String d = base64_encode(c);
        
        //hash the encoded string
        cryptedPassword = hashPassword(d);
        return cryptedPassword;
    }

    //Base64_encode of php
    private String base64_encode (String x){
        String encodedBytes = Base64.getEncoder().encodeToString(x.getBytes());
        return encodedBytes;
    }


    


    //From stackoverflow -- uses the str_rot13 of php
    private String str_rot13(String s){
        String rot13 = "";
        for (int i = 0; i <s.length(); i++){
            char c = s.charAt(i);
            if       (c >= 'a' && c <= 'm') c += 13;
            else if  (c >= 'A' && c <= 'M') c += 13;
            else if  (c >= 'n' && c <= 'z') c -= 13;
            else if  (c >= 'N' && c <= 'Z') c -= 13;
            rot13 = rot13+c;
        }
        return rot13.trim();
    }
    
    
    private String hashPassword(String password){
        String generatedPassword = null;
        try{
            // getInstance() method is called with algorithm SHA-512 
            MessageDigest md = MessageDigest.getInstance("SHA-512");
    
            byte[] bytes = md.digest(password.getBytes(StandardCharsets.UTF_8));
                        
            StringBuilder sb = new StringBuilder();
            
            for (int i=0; i<bytes.length; i++){
                sb.append(Integer.toString((bytes[i] & 0xff) + 0x100, 16).substring(1));
            }
            
            generatedPassword = sb.toString();
        }catch (NoSuchAlgorithmException e){
            e.printStackTrace();
        }
        return generatedPassword;
    }
    
    
    protected boolean retryConnection(PCSCReader reader) {
        try {
//            reader.disconnect();
//            reader.connect(readerMgr.getContext());
//            reader.getReaderName();

            reader.disconnect();
            reader.connect(readerMgr.getContext());
//            reader.extractATR();

            return reader.isConnected();

        } catch (MiddlewareException e1) {
            e1.printStackTrace();
        }
            return false;
	}
    
    protected boolean isUAECard(PCSCReader reader) {
        if(reader.getType() == CardTypeEnum.UAE_ID_CARD)
            return true;
        else if(reader.getType() == CardTypeEnum.UAE_ID_TEST_CARD)
            return true;
        else
            return false;
    }
    
    private void initialize(){
        try{
            // check if there is a connected card reader
            if(readerMgr.getReaders()==null || readerMgr.getReaders().length == 0){
                JOptionPane.showMessageDialog(null,"There is no PCSC readers found.", "NO PCSC Readers", JOptionPane.ERROR_MESSAGE);
                
                this.dispose();
                
                
            }else{
                // Get the first reader regardless of how many
                String theReader = readerMgr.getReaders()[0].getReaderName();

                reader = readerMgr.selectReaderByName(theReader);
                boolean validCard = false;  //variable to check if UAE or UAE test card
                
                
            }

            
        } catch (Exception ex){
            ex.printStackTrace();
        }

    }
    
    
    protected void checkthereader(){
        try{
            long a = System.currentTimeMillis();
            
            while (!reader.isConnected() && !isUAECard(reader)){
                System.out.println(reader.isConnected());
                Thread.sleep(1000);
                reader.disconnect();
                reader.connect(readerMgr.getContext());
                reader.getReaderName();
                
                
//                if (retryConnection(reader) && isUAECard(reader)){
//                    System.err.println("World");
//                    break;
//                }
            } loadPublicData();
            
        }catch (Exception e){
            e.printStackTrace();
        }
    }
    
    
    
    protected void loadPublicData() {

        try{
//            PublicDataFacade pdf = reader.getPublicDataFacade();
            PublicDataFacade publicDataFacade = reader.getPublicDataFacade();
            
            timer = new Timer(100, new ProgressTimer(jProgressBar1));
            timer.start();

            
            
            CardHolderPublicData publicdata = publicDataFacade.readPublicData(true, true, true
            , true, false);
            displayPublicData(publicdata);
            
            setProgressPercent(PROGRESS_MAX);
            
            
        } catch (MiddlewareException mex) {
            if(mex.getCode() == ErrorCodes.E_ID_READ_PHOTOGRAPHY)
            	JOptionPane.showMessageDialog(this, "Error reading photography.\n" +
            			"Photography may be protected, Please unselect \"Photography\" checkbox and try again.",
                        "Error", JOptionPane.ERROR_MESSAGE);
            else
            	JOptionPane.showMessageDialog(this, "Error occured when reading public data : " + mex.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
            mex.printStackTrace();
        }
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(this, "Error occured when reading public data",
                    "Error", JOptionPane.ERROR_MESSAGE);
			e.printStackTrace();
		}
        finally
        {
            setProgressPercent(PROGRESS_MAX);
        }
        
    }
    
    private void displayPublicData(CardHolderPublicData publicdata){

        if (publicdata == null)
            return;

        // Get the info from the emirates ID using the library...
        String sex = PublicDataUtils.getSex(Utils.CharArrayToUTF8String(publicdata.getSex()));
        String fullName = PublicDataUtils.removeCommas(Utils.CharArrayToUTF8String(publicdata.getFullName()));
        String idNumber = PublicDataUtils.removeCommas(Utils.CharArrayToUTF8String(publicdata.getIDNumber()));
        String get_nationality = Utils.CharArrayToUTF8String(publicdata.getNationality());
        String expirydate = Utils.CharArrayToStringDate(publicdata.getExpiryDate());
        String maritalStatus = PublicDataUtils.getMaritalStatus(Utils.CharArrayToHex(publicdata.getMaritalStatus()));
        String dobValue = Utils.CharArrayToStringDate(publicdata.getDateOfBirth());
//        expiryDateValue.setText(Utils.CharArrayToStringDate(publicdata.getExpiryDate()));

        photo = Utils.ToByteArray(publicdata.getPhotography()); // get the bytes of the photo
        
        
        //remove commas and such
        String final_name = fullName.trim().replaceAll(" +", " ");
        
        DateFormat formatter = new SimpleDateFormat("dd/mm/yyyy");
        Date date = null;
        try {
            date = (Date)formatter.parse(dobValue);   
        } catch (ParseException ex) {
            Exceptions.printStackTrace(ex);
        }
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-mm-dd");
        String final_date = sdf.format(date);
        
        txt_name.setText(final_name);
        txt_confirmname.setText(final_name);
        txt_nationality.setText(get_nationality);
        txt_bday.setText(final_date);
        txt_eid.setText(idNumber);
   
        
        ImageIcon icon = new ImageIcon(photo);
        
        photo_bomb.setIcon(icon);
        
        btn_next.setEnabled(true);
        
        
  
    }
    
    
    class ProgressTimer implements ActionListener {
        JProgressBar bar;
        public ProgressTimer(JProgressBar bar) {
            percent = 0;
            this.bar = bar;
        }
        public void actionPerformed(ActionEvent e) {
            if(percent != PROGRESS_MAX - 1)
                setProgressPercent(percent + 1);
            bar.setValue(percent);

            if(percent >= PROGRESS_MAX) 
            timer.stop();
        }
    }
    
    
    protected synchronized void setProgressPercent(int percent) {
        this.percent = percent;
    }
    
    
    class PublicDataThread implements Runnable {
        public PublicDataThread() {
                setProgressPercent(0);
        }

        public void run() {
                loadPublicData();
        }
    }
    
    
    class VerificationThread implements Runnable {
        public void run(){
            loadVerification();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUp_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUp_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUp_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUp_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new SignUp_Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Credentials;
    private javax.swing.JPanel EmiratesID;
    private javax.swing.JPanel LandingPage;
    private javax.swing.JPanel Layout;
    private javax.swing.JButton back;
    private javax.swing.JButton btn_capture;
    private javax.swing.JButton btn_next;
    private javax.swing.JComboBox<String> cmb_branch;
    private javax.swing.JButton eyecon;
    private javax.swing.JButton eyecon1;
    private javax.swing.JPanel header;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JPanel panel_of_inputs;
    public javax.swing.JLabel photo_bomb;
    private javax.swing.JTextField txt_bday;
    private javax.swing.JTextField txt_confirmname;
    private javax.swing.JPasswordField txt_confirmpass;
    private javax.swing.JTextField txt_eid;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_mobile;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_nationality;
    private javax.swing.JPasswordField txt_pass;
    private javax.swing.JLabel txt_text;
    // End of variables declaration//GEN-END:variables
}
