/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hse_application;

import hse_application.functions.DBConnect;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;

import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Base64;
import java.util.Date;
import java.util.logging.FileHandler;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.openide.util.Exceptions;
//import org.mindrot.jbcrypt.BCrypt;

/**
 *
 * @author OPTIPLEX
 */
public class LoginFrame extends javax.swing.JFrame {
    int i = 0;
    public String userID;
    int xMouse;
    int yMouse;
    JFrame theFrame;
    String name;

    
    
    


    /**
     * Creates new form LoginFrame
     */
    public LoginFrame() {
        
        initComponents();
        
        
        this.setIconImage(new ImageIcon(getClass().getResource("/hse_application/Icons/icon.jpg")).getImage());
//        pass_placeholder.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btn_login = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        txt_user = new javax.swing.JTextField();
        user_placeholder = new javax.swing.JTextField();
        txt_pass = new javax.swing.JPasswordField();
        pass_placeholder = new javax.swing.JTextField();
        header = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lbl_header = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_login.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_login.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/DefaultButtons/logindefault.png"))); // NOI18N
        btn_login.setText(org.openide.util.NbBundle.getMessage(LoginFrame.class, "LoginFrame.btn_login.text")); // NOI18N
        btn_login.setBorder(null);
        btn_login.setContentAreaFilled(false);
        btn_login.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_login.setFocusPainted(false);
        btn_login.setOpaque(true);
        btn_login.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/ClickedButtons/loginclicked.png"))); // NOI18N
        btn_login.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/HoverButtons/loginhover.png"))); // NOI18N
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });
        jPanel1.add(btn_login, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 244, 235, 36));

        btn_cancel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/DefaultButtons/logincanceldefault.png"))); // NOI18N
        btn_cancel.setText(org.openide.util.NbBundle.getMessage(LoginFrame.class, "LoginFrame.jButton1.text")); // NOI18N
        btn_cancel.setBorder(null);
        btn_cancel.setContentAreaFilled(false);
        btn_cancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_cancel.setFocusPainted(false);
        btn_cancel.setOpaque(true);
        btn_cancel.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/ClickedButtons/logincancelclicked.png"))); // NOI18N
        btn_cancel.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/Icons/HoverButtons/logincancelhover.png"))); // NOI18N
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });
        jPanel1.add(btn_cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 289, 235, 27));

        txt_user.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_user.setText(org.openide.util.NbBundle.getMessage(LoginFrame.class, "LoginFrame.txt_user.text")); // NOI18N
        txt_user.setMargin(new java.awt.Insets(2, 7, 2, 2));
        txt_user.setOpaque(false);
        txt_user.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_userFocusGained(evt);
            }
        });
        txt_user.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_userKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_userKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_userKeyTyped(evt);
            }
        });
        jPanel1.add(txt_user, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 155, 234, 30));

        user_placeholder.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        user_placeholder.setText(org.openide.util.NbBundle.getMessage(LoginFrame.class, "LoginFrame.user_placeholder.text")); // NOI18N
        user_placeholder.setDisabledTextColor(new java.awt.Color(140, 140, 140));
        user_placeholder.setEnabled(false);
        user_placeholder.setMargin(new java.awt.Insets(2, 7, 2, 2));
        user_placeholder.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                user_placeholderKeyPressed(evt);
            }
        });
        jPanel1.add(user_placeholder, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 155, 234, 30));

        txt_pass.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_pass.setText(org.openide.util.NbBundle.getMessage(LoginFrame.class, "LoginFrame.txt_pass.text")); // NOI18N
        txt_pass.setMargin(new java.awt.Insets(2, 7, 2, 2));
        txt_pass.setOpaque(false);
        txt_pass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_passKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_passKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_passKeyTyped(evt);
            }
        });
        jPanel1.add(txt_pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 194, 234, 30));

        pass_placeholder.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pass_placeholder.setText(org.openide.util.NbBundle.getMessage(LoginFrame.class, "LoginFrame.pass_placeholder.text")); // NOI18N
        pass_placeholder.setDisabledTextColor(new java.awt.Color(140, 140, 140));
        pass_placeholder.setEnabled(false);
        pass_placeholder.setMargin(new java.awt.Insets(2, 7, 2, 2));
        pass_placeholder.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pass_placeholderKeyPressed(evt);
            }
        });
        jPanel1.add(pass_placeholder, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 194, 234, 30));

        header.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/hse_images/Backgrounds/login(1).png"))); // NOI18N
        header.setText(org.openide.util.NbBundle.getMessage(LoginFrame.class, "LoginFrame.header.text")); // NOI18N
        jPanel1.add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 371, 39));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hse_application/hse_images/Frame.png"))); // NOI18N
        jLabel1.setText(org.openide.util.NbBundle.getMessage(LoginFrame.class, "LoginFrame.jLabel1.text")); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 371, 362));

        lbl_header.setText(org.openide.util.NbBundle.getMessage(LoginFrame.class, "LoginFrame.lbl_header.text")); // NOI18N
        lbl_header.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                lbl_headerMouseDragged(evt);
            }
        });
        lbl_header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbl_headerMousePressed(evt);
            }
        });
        jPanel1.add(lbl_header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 370, 40));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed
        login();
        
        
        
    }//GEN-LAST:event_btn_loginActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void txt_passKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_passKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            login();
        }
        if (txt_pass.getText().isEmpty()){
            pass_placeholder.setVisible(true);
        }else{
            pass_placeholder.setVisible(false);
        }
        
    }//GEN-LAST:event_txt_passKeyPressed

    private void txt_userKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_userKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            login();
        }
        if (txt_user.getText().isEmpty()){
            user_placeholder.setVisible(true);
        }else{
            user_placeholder.setVisible(false);
        }
        
    }//GEN-LAST:event_txt_userKeyPressed

    private void user_placeholderKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_user_placeholderKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_user_placeholderKeyPressed

    private void pass_placeholderKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pass_placeholderKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_pass_placeholderKeyPressed

    private void txt_userKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_userKeyTyped
        if (txt_user.getText().isEmpty()){
            user_placeholder.setVisible(true);
        }else{
            user_placeholder.setVisible(false);
        }
        
    }//GEN-LAST:event_txt_userKeyTyped

    private void txt_userFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_userFocusGained
        if (txt_user.getText().isEmpty()){
            user_placeholder.setVisible(true);
        }else{
            user_placeholder.setVisible(false);
        }
    }//GEN-LAST:event_txt_userFocusGained

    private void txt_userKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_userKeyReleased
        if (txt_user.getText().isEmpty()){
            user_placeholder.setVisible(true);
        }else{
            user_placeholder.setVisible(false);
        }
    }//GEN-LAST:event_txt_userKeyReleased

    private void txt_passKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_passKeyReleased
        if (txt_pass.getText().isEmpty()){
            pass_placeholder.setVisible(true);
        }else{
            pass_placeholder.setVisible(false);
        }
    }//GEN-LAST:event_txt_passKeyReleased

    private void txt_passKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_passKeyTyped
        if (txt_pass.getText().isEmpty()){
            pass_placeholder.setVisible(true);
        }else{
            pass_placeholder.setVisible(false);
        }
    }//GEN-LAST:event_txt_passKeyTyped

    private void lbl_headerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_headerMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_lbl_headerMousePressed

    private void lbl_headerMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_headerMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_lbl_headerMouseDragged
    
    private void login(){
        
        Thread th = new Thread(new ShowSplash());
        th.start();
        
        try {
            Connection con = DBConnect.ConnDB();
            PreparedStatement pstmt;
            ResultSet rs;
            
            String username = txt_user.getText();
            String password = cryptedPassword(txt_pass.getText(), "--HSEPro--");
            
            String query = "SELECT user_fullname name, user_id id FROM tbl_user WHERE user_username = '"+username+"'"
                    + " AND user_password = ?";
            pstmt = con.prepareStatement(query);
            pstmt.setString(1, password);
            rs = pstmt.executeQuery();
            
            if (rs.next()){
                name = rs.getString("name");
//                JOptionPane.showMessageDialog(this, "Welcome "+name);
                
                userID = rs.getString("id");
                this.dispose();
                    


                Thread th1 = new Thread(new ShowFrame());
                th1.start();
                                
                con.close();
                System.out.println("DB Connection Closed");
            }else{
                JOptionPane.showMessageDialog(this, "No such user");
            }
           
            
            
        } catch (SQLException ex) {
            Exceptions.printStackTrace(ex);
        }
    }
    
    private String cryptedPassword(String pass, String salt){
        String cryptedPassword = "";
        //str_rot13 the password concatenated with the salt
        String a = str_rot13(pass.concat(salt));
        
        //hash the str_rot13'ed string
        String b = hashPassword(a);
        
        //rotate the hashed password again
        String c = str_rot13(b);
        
        //encode to base64
        String d = base64_encode(c);
        
        //hash the encoded string
        cryptedPassword = hashPassword(d);
        return cryptedPassword;
    }

    //Base64_encode of php
    private String base64_encode (String x){
        String encodedBytes = Base64.getEncoder().encodeToString(x.getBytes());
        return encodedBytes;
    }


    


    //From stackoverflow -- uses the str_rot13 of php
    private String str_rot13(String s){
        String rot13 = "";
        for (int i = 0; i <s.length(); i++){
            char c = s.charAt(i);
            if       (c >= 'a' && c <= 'm') c += 13;
            else if  (c >= 'A' && c <= 'M') c += 13;
            else if  (c >= 'n' && c <= 'z') c -= 13;
            else if  (c >= 'N' && c <= 'Z') c -= 13;
            rot13 = rot13+c;
        }
        return rot13.trim();
    }
    
    
    private String hashPassword(String password){
        String generatedPassword = null;
        try{
            // getInstance() method is called with algorithm SHA-512 
            MessageDigest md = MessageDigest.getInstance("SHA-512");
    
            byte[] bytes = md.digest(password.getBytes(StandardCharsets.UTF_8));
                        
            StringBuilder sb = new StringBuilder();
            
            for (int i=0; i<bytes.length; i++){
                sb.append(Integer.toString((bytes[i] & 0xff) + 0x100, 16).substring(1));
            }
            
            generatedPassword = sb.toString();
        }catch (NoSuchAlgorithmException e){
            e.printStackTrace();
        }
        return generatedPassword;
    }


    


    //From stackoverflow -- uses the str_rot13 of php
  
    class ShowSplash implements Runnable {

        public void run() {
            try {
                Splash s = new Splash();
                s.setVisible(true);
                Thread.sleep(1500);
                
                s.dispose();
            } catch (InterruptedException ex) {
                Exceptions.printStackTrace(ex);
            }
        }
    }
    
    
    class ShowFrame implements Runnable {

        public void run() {
            try {
                Thread.sleep(1500);
                HSE_HomePage e = new HSE_HomePage();
                e.setUser(name, userID);
                e.setVisible(true);
                e.requestFocus();
            } catch (InterruptedException ex) {
                Exceptions.printStackTrace(ex);
            }

        }
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_login;
    private javax.swing.JLabel header;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbl_header;
    private javax.swing.JTextField pass_placeholder;
    private javax.swing.JPasswordField txt_pass;
    private javax.swing.JTextField txt_user;
    private javax.swing.JTextField user_placeholder;
    // End of variables declaration//GEN-END:variables
}
